openapi: 3.1.1
info:
  title: Doctree API
  description: API для иерархической системы хранения документов
  version: "2.0.0"
servers:
  - url: /api/v2
tags:
  - name: Tree
  - name: Document
  - name: Parsing
  - name: Auth
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: access-token

  schemas:
    GetFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
          nullable: true
        fileUrl:
          type: string
    
    DocumentRelation:
      type: object
      properties:
        documentId:
          type: string
          format: uuid
        type:
          type: string
          
    DocumentNode:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
      
    Document:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        files:
          type: array
          items:
            $ref: "#/components/schemas/GetFile"
        relations:
          type: array
          items:
            $ref: "#/components/schemas/DocumentRelation"
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/DocumentNode"
      required: [id, title]
    
    DocumentWithNodes:
      type: object
      properties:
        nodeTitle:
          type: string
          format: uuid
        documents:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              title:
                type: string
              description:
                type: string
              tags:
                type: array
                items:
                  type: string
              files:
                type: array
                items:
                  $ref: "#/components/schemas/GetFile"
      required: [id, title]
    
    CreateNodeRequest:
      type: object
      properties:
        title:
          type: string
        parentId:
          type: string
          format: uuid
    
    UpdateNodeRequest:
      type: object
      properties:
        title:
          type: string
        parentId:
          type: string
          format: uuid

    CreateDocumentRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
      required: [title]

    UpdateDocumentRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string

    RelateDocumentsRequest:
      type: object
      properties:
        relatedId:
          type: string
          format: uuid
        relation:
          type: string
      required: [relatedId, relation]

    AuthRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]
    
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
      required: [username, password, email]
    
    SchedulerRegisterRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]
      

    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    
    TreeNode:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        parentId:
          type: string
          format: uuid
          nullable: true
      required: [id, title]
    
    Tree:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        children:
          type: array
          items:
            $ref: "#/components/schemas/Tree"

paths:
  /auth/login:
    post:
      tags: [Auth]
      summary: Авторизация по логину и паролю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
      responses:
        "200":
          description: Успешный вход
        "400":
          description: Неверный логин или пароль
  
  /auth/logout:
    post:
      tags: [Auth]
      summary: Авторизация по логину и паролю
      responses:
        "200":
          description: Успешный выход
        "401":
          description: Пользователь не аутентифицирован
          
  /auth/register:
    post:
      tags: [Auth]
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: Пользователь создан
        "403":
          description: У пользователя нет прав администратора
        "400":
          description: Ошибка запроса
  
  /auth/scheduler:
    post:
      security: []   # создание планировщика без авторизации
      tags: [Auth]
      summary: Создать планировщик парсера
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchedulerRegisterRequest"
      responses:
        "201":
          description: Планировщик создан
        "403":
          description: У пользователя нет прав администратора
        "400":
          description: Ошибка запроса

  /trees/nodes:
      get:
        tags: [Tree]
        summary: Получить все узлы
        responses:
          "200":
            description: Список узлов
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    nodes:
                      type: array
                      items:
                        $ref: "#/components/schemas/TreeNode"
          "403":
            description: У пользователя нет прав
      post:
        tags: [Tree]
        summary: Создание узла дерева
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNodeRequest"
        responses:
          "201":
            description: Узел создан
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
          "403":
            description: У пользователя нет прав администратора
          "400": 
            description: Некорректный запрос
        
  /trees/nodes/{id}:
    get:
      tags: [Tree]
      summary: Получить узел по id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Найденный узел
          content:
            application/json:
              schema:
                type: object
                properties:
                  node:
                    $ref: "#/components/schemas/TreeNode"
        "403":
            description: У пользователя нет прав
        "404":
          description: Узел не найден
    patch:
      tags: [Tree]
      summary: Обновить узел (название или родитель)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNodeRequest"
      responses:
        "200":
          description: Узел обновлен
        "400":
          description: Неправильный запрос
        "403":
          description: У пользователя нет прав администратора
        "404":
          description: Не найден узел
    delete:
      tags: [Tree]
      summary: Удалить узел
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Узел удален
        "400":
          description: Неправильный запрос
        "403":
          description: У пользователя нет прав администратора
        "404":
          description: Не найден узел
  /trees:
    get:
      tags: [Tree]
      summary: Получить все деревья
      responses:
        "200":
          description: Список деревьев
          content:
            application/json:
              schema:
                type: object
                properties:
                  trees:
                    type: array
                    items:
                      $ref: "#/components/schemas/Tree"
        "403":
            description: У пользователя нет прав
    post:
      tags: [Tree]
      summary: Создать корень дерева
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
              required: [title]
      responses:
        "201":
          description: Корень создан
          content: 
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        "403":
          description: У пользователя нет прав администратора
        "400":
          description: Некорректные данные

  /trees/{rootId}:
    get:
      tags: [Tree]
      summary: Получить целое дерево по узлу внутри
      parameters:
        - in: path
          name: rootId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Дерево найдено
          content:
            application/json:
              schema:
                type: object
                properties:
                  tree:
                      $ref: "#/components/schemas/Tree"
        "400":
          description: Некорректный запрос
        "404": 
          description: Узел не найден
    delete:
      tags: [Tree]
      summary: Удалить дерево
      parameters:
        - in: path
          name: rootId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Дерево удалено
        "400":
          description: Некорректный запрос или узел не является корневым
        "403":
          description: У пользователя нет прав администратора
        "404":
          description: Узел не найден

  /trees/{id}/subtree:
    get:
      tags: [Tree]
      summary: Получить поддерево
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Поддерево найдено
          content:
            application/json:
              schema:
                type: object
                properties:
                  tree:
                      $ref: "#/components/schemas/Tree"
        "400":
          description: Некорректный запрос
        "403":
            description: У пользователя нет прав
        "404": 
          description: Узел не найден

  /docs:
    post:
      tags: [Document]
      summary: Создать документ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDocumentRequest"
      responses:
        "201":
          description: Документ создан
          content: 
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
            
        "403":
            description: У пользователя нет прав
        "400":
          description: Некорректный запрос
        
    get:
      tags: [Document]
      summary: Поиск документов
      parameters:
        - in: query
          name: title
          schema:
            type: string
        - in: query
          name: description
          schema:
            type: string
        - in: query
          name: tag
          schema:
            type: string
        - in: query
          name: text
          schema:
            type: string
        - in: query
          name: nodeId
          schema:
            type: string
      responses:
        "200":
          description: Найденные документы
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      $ref: "#/components/schemas/Document"
        "400":
          description: Некорректный запрос
        "403":
            description: У пользователя нет прав

  /docs/{id}:
    get:
      tags: [Document]
      summary: Получить документ по id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Документ найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  doc:
                    $ref: "#/components/schemas/Document"
        "400":
          description: Некорректный запрос
        
        "403":
            description: У пользователя нет прав
        
        "404":
          description: Документ не найден
        
    patch:
      tags: [Document]
      summary: Обновить документ
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDocumentRequest"
      responses:
        "200":
          description: Документ обновлен
        "400":
          description: Некорректный запрос
        "403":
            description: У пользователя нет прав
        "404":
          description: Документ не найден
    delete:
      tags: [Document]
      summary: Удалить документ
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Документ удален
        "400":
          description: Некорректный запрос
        "403":
            description: У пользователя нет прав
        "404":
          description: Документ не найден

  /docs/{id}/files:
    patch:
      tags: [Document]
      summary: Загрузить файл к документу
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required: [file]
      responses:
        "201":
          description: Файл прикреплен
        "400":
          description: Некорректный запрос
        "403":
            description: У пользователя нет прав
        "404":
          description: Документ не найден
        
  /docs/{id}/files/{fileId}:
    delete:
      tags: [Document]
      summary: Отвязать файл от документа
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: fileId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Файл отвязан
        "400":
          description: Некорректный запрос
        "403":
            description: У пользователя нет прав
        "404":
          description: Документ или файл не найдены

  /docs/{id}/nodes/{nodeId}:
    patch:
      tags: [Document]
      summary: Привязать документ к узлу
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: nodeId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Документ отвязан от другого узла иерархии и привязан к заданному
        "201":
          description: Документ привязан к узлу
        "400":
          description: Некорректный запрос
        "403":
            description: У пользователя нет прав
        "404":
          description: Документ или узел не найден
    delete:
      tags: [Document]
      summary: Отвязать документ от узла
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: nodeId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Документ отвязан от узла
        "400":
          description: Некорректный запрос
        "403":
            description: У пользователя нет прав
        "404":
          description: Документ или узел не найден

  /docs/{id}/relations/{relatedId}:
    patch:
      tags: [Document]
      summary: Связать документ с другим документом
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: relatedId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: Связь создана
        "400":
          description: Некорректный запрос
        "403":
            description: У пользователя нет прав
        "404":
          description: Документ или узлы не найдены
    delete:
      tags: [Document]
      summary: Удалить связь между документами
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: relatedId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Связь удалена
        "400":
          description: Некорректный запрос
        "403":
            description: У пользователя нет прав
        "404":
          description: Документ или связь не найдены

  /parsing/{fileId}:
    put:
      tags: [Parsing]
      summary: Поставить файл в очередь на парсинг
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "202":
          description: Файл добавлен в очередь
        "400":
          description: Некорректный запрос
        "403":
            description: У пользователя нет прав планировщика
        "404":
          description: Файл не найден

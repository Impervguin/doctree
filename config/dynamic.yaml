http:
  routers:
    media-router:
      rule: "PathPrefix(`/media`)"
      service: minio-media
      middlewares: ["strip-media"]

    app-api-router-get:
      rule: "(PathPrefix(`/api/v2`) || PathPrefix(`/api/v1`)) && Method(`GET`, `HEAD`, `OPTIONS`)"
      service: api
      middlewares: ["app-name-header"]

    app-api-router-write:
      rule: "(PathPrefix(`/api/v2`) || PathPrefix(`/api/v1`)) && Method(`POST`, `PUT`, `PATCH`, `DELETE`)"
      service: api-write
      middlewares: ["app-name-header"]
      
    legacy-router:
      rule: "PathPrefix(`/legacy`)"
      middlewares:
        - legacy-redirect
      service: noop@internal
    
    readme-router-docs:
      rule: "PathPrefix(`/documentation`)"
      middlewares:
        - strip-docs
      service: readme-service
    
    readme-router:
      rule: "PathPrefix(`/readme`)"
      service: readme-service
      
    admin-router:
      rule: "PathPrefix(`/admin`)"
      middlewares:
        - strip-admin
        - admin-header-scripts
      service: admin-service
      
    management-router:
      rule: "Path(`/management`)"
      middlewares:
        - replace-management
      service: static-service

    monitoring-router:
      rule: "PathPrefix(`/monitoring`)"
      middlewares:
        - monitoring-header-scripts
      service: grafana-service

    index-static-router:
      rule: "Path(`/`)"
      middlewares:
        - replace-index
      service: static-service
      
    reserved-router:
      rule: "PathPrefix(`/reserved`)"
      middlewares:
        - strip-reserved
      service: static-service

    
    status-api-router:
      rule: "PathPrefix(`/api`) && HeadersRegexp(`Referer`, `.*/status.*`)"
      middlewares:
        - strip-status
        - status-header-scripts
      service: status-service

    status-router:
      rule: "PathPrefix(`/status`)"
      middlewares:
        - status-to-dashboard
        - status-header-scripts
      service: status-service

    static-router:
      rule: "PathPrefix(`/`)"
      service: static-service
      

  services:
    minio-media:
      loadBalancer:
        servers:
          - url: "http://minio:9000"

    api:
      weighted:
        services:
          - name: api-write
            weight: 2
          - name: api-read1
            weight: 1
          - name: api-read2
            weight: 1

    api-write:
      loadBalancer:
        servers:
          - url: "http://app:3000"
    
    api-read1:
      loadBalancer:
        servers:
          - url: "http://app-readonly1:3000"
    
    api-read2:
      loadBalancer:
        servers:
          - url: "http://app-readonly2:3000"
    
    readme-service:
      loadBalancer:
        servers:
          - url: "http://readme:8000"
    
    static-service:
      loadBalancer:
        servers:
          - url: "http://static:80"

    status-service:
      loadBalancer:
        servers:
          - url: "http://localhost:8080"
    
    admin-service:
      loadBalancer:
        servers:
          - url: "http://pgadmin:80"

    grafana-service:
      loadBalancer:
        servers:
          - url: "http://grafana:3000"

    noop:

  middlewares:
    strip-media:
      stripPrefix:
        prefixes:
          - "/media"
    strip-reserved:
      stripPrefix:
        prefixes: doctree
          - "/reserved"
    strip-docs:
      stripPrefix:
        prefixes:
          - "/documentation"
    strip-admin:
      stripPrefix:
        prefixes:
          - "/admin"
    strip-status:
      stripPrefix:
        prefixes:
          - "/status"
    replace-management:
      replacePath:
        path: "/management.html"
    replace-admin:
      redirectRegex:
        regex: "^https?://[^/]+/admin/?(.*)"
        replacement: "https://${1}/admin/browser/${2}"
        permanent: true
    legacy-redirect:
      redirectRegex:
        regex: "^https?://[^/]+/legacy/?(.*)"
        replacement: "https://insomnia.rest"
        permanent: true
    status-to-dashboard:
      replacePathRegex:
        regex: "^/status(/.*)?$"
        replacement: "/dashboard$1"
    replace-index:
      replacePath:
        path: "/index.html"
    admin-header-scripts:
      headers:
        customRequestHeaders:
          X-Script-Name: /admin
    status-header-scripts:
      headers:
        customRequestHeaders:
          X-Script-Name: /status
    strip-monitoring:
      stripPrefix:
        prefixes:
          - "/monitoring"
    monitoring-header-scripts:
      headers:
        customRequestHeaders:
          X-Script-Name: /monitoring
    monitoring-rewrite:
      replacePathRegex:
        regex: "^/monitoring(/.*)?$"
        replacement: "$1"
    app-name-header:
      headers:
        customResponseHeaders:
          Server: "doctree-app"

      
services:
  doctree-app:
    container_name: doctree-app
    hostname: app
    build:
      context: ..
      dockerfile: ./src/Dockerfile
    ports:
      - 3000:3000
    env_file:
      - ../config/app.env
    depends_on:
      - doctree-postgres
    networks:
      - doctree-postgres-net
      - doctree-minio-net
    volumes:
      - ../src:/usr/src/app/src
    command: >
        npm run start:dev

  doctree-app-readonly1:
    container_name: doctree-app-readonly1
    hostname: app-readonly1
    build:
      context: ..
      dockerfile: ./src/Dockerfile
    ports:
      - 3001:3000
    env_file:
      - ../config/app.readonly1.env
    depends_on:
      - doctree-postgres
    networks:
      - doctree-postgres-net
      - doctree-minio-net
    volumes:
      - ../src:/usr/src/app/src
    command: >
        npm run start:dev

  doctree-app-readonly2:
    container_name: doctree-app-readonly2
    hostname: app-readonly2
    build:
      context: ..
      dockerfile: ./src/Dockerfile
    ports:
      - 3002:3000
    env_file:
      - ../config/app.readonly2.env
    depends_on:
      - doctree-postgres
    networks:
      - doctree-postgres-net
      - doctree-minio-net
    volumes:
      - ../src:/usr/src/app/src
    command: >
        npm run start:dev
  
  doctree-traefik:
    container_name: doctree-traefik
    hostname: traefik
    image: traefik:v2.10
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" 
    volumes:
      - ../config/traefik.yaml:/etc/traefik/traefik.yml:ro
      - ../config/dynamic.yaml:/etc/traefik/dynamic.yml:ro
      - ../readme/:/etc/readme
      - ../readme.md:/etc/readme.md:ro
    networks:
      - doctree-minio-net
      - doctree-traefik-net
  
  doctree-readme:
    container_name: doctree-readme
    hostname: readme
    build:
      context: ..
      dockerfile: ./readme/Dockerfile
    ports:
      - 8081:8000
    networks:
      - doctree-traefik-net
  

  doctree-static-nginx:
    container_name: doctree-static-nginx
    hostname: static
    image: nginx:1.25.1-alpine
    ports:
      - 8082:80
    volumes:
      - ../static/:/usr/share/nginx/html/
    networks:
      - doctree-traefik-net
    

  doctree-postgres:
    container_name: doctree-postgres
    hostname: pg
    image: postgres:17.4-alpine3.20
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
    env_file:
      - pg.env
    ports:
      - 5432:5432
    volumes:
      - doctree-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
    networks:
      - doctree-postgres-net
    
  doctree-pgadmin:
    container_name: doctree-pgadmin
    hostname: pgadmin
    image: dpage/pgadmin4:9.8
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: impi@example.com
      PGADMIN_DEFAULT_PASSWORD: impichek

      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    networks:
      - doctree-postgres-net
      - doctree-traefik-net
  
  doctree-minio:
    container_name: doctree-minio
    hostname: minio
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z
    command: server --console-address ":${MINIO_CONSOLE_PORT}" --address ":${MINIO_PORT}" /data
    env_file:
      - minio.env
    ports:
      - ${MINIO_PORT}:${MINIO_PORT}
      - ${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}
    volumes:
      - doctree-minio-data:/data
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${MINIO_PORT}/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - doctree-minio-net
  
  doctree-postgres-migrator:
    container_name: doctree-postgres-migrator
    hostname: pg-migrator
    build:
      context: ..
      dockerfile: pkg/pgmigrator/Dockerfile
    environment:
      - GOOSE_MIGRATION_DIR=/migrations
    env_file:
      - goose.env
    command:
      - "goose"
      - "up"
    volumes:
      - ../migrations:/migrations
    depends_on:
      doctree-postgres:
        condition: service_healthy
    networks:
      - doctree-postgres-net

  doctree-loki:
    container_name: doctree-loki
    hostname: loki
    image: grafana/loki:latest
    ports:
      - 3100:3100
    volumes:
      - loki-data:/loki
    networks:
      - doctree-traefik-net

  doctree-grafana:
   container_name: doctree-grafana
   hostname: grafana
   image: grafana/grafana:latest
   ports:
     - 3003:3000
   environment:
     - GF_SECURITY_ADMIN_PASSWORD=admin
     - GF_SERVER_ROOT_URL=http://localhost/monitoring
     - GF_SERVER_SERVE_FROM_SUB_PATH=true
   volumes:
     - grafana-data:/var/lib/grafana
   depends_on:
     - doctree-loki
   networks:
     - doctree-traefik-net

  doctree-promtail:
    container_name: doctree-promtail
    hostname: promtail
    image: grafana/promtail:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../promtail-config.yaml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - doctree-loki
    networks:
      - doctree-traefik-net

volumes:
  doctree-postgres-data:
  doctree-minio-data:
  loki-data:
  grafana-data:

networks:
  doctree-postgres-net:
    driver: bridge
  doctree-minio-net:
    driver: bridge
  doctree-traefik-net:
    driver: bridge


    

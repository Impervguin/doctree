name: E2E Tests

on:
  push:
    branches:
      - '**'

jobs:
  e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install make
      run: sudo apt-get update && sudo apt-get install -y make

    - name: Install Docker
      uses: docker/setup-docker-action@v2

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - name: Install dependencies
      run: npm ci

    - name: Create app.env
      run: |
        echo "DB_HOST=doctree-postgres-e2e" > app.env
        echo "DB_PORT=5432" >> app.env
        echo "DB_USER=postgres" >> app.env
        echo "DB_PASSWORD=postgres" >> app.env
        echo "DB_NAME=app_db" >> app.env
        echo "JWT_EXPIRES_IN=36000" >> app.env
        echo "JWT_SECRET=test-jwt-secret-for-e2e" >> app.env
        echo "MINIO_ENDPOINT=doctree-minio-e2e" >> app.env
        echo "MINIO_PORT=9000" >> app.env
        echo "MINIO_ACCESS_KEY=minioadmin" >> app.env
        echo "MINIO_SECRET_KEY=minioadmin" >> app.env
        echo "MINIO_BUCKET_NAME=app_db" >> app.env
        echo "AUTH_MAIL_PASSWORD=${{ secrets.TEST_EMAIL_PASSWORD }}" >> app.env
        echo "AUTH_MAIL_USER=${{ secrets.TEST_EMAIL_USER }}" >> app.env
        echo "AUTH_MAIL_HOST=${{ secrets.AUTH_EMAIL_HOST }}" >> app.env


    - name: Start infrastructure with Docker Compose
      run: |
        docker compose -f ./deployments/docker-compose.test.yaml up -d
        sleep 30

    - name: Wait for services to be ready
      run: |
        echo "Waiting for PostgreSQL..."
        until pg_isready -h localhost -p 5432 -U postgres; do
          sleep 5
        done
        
        echo "Waiting for MinIO..."
        until curl -f http://localhost:9000/minio/health/live; do
          sleep 5
        done

    - name: Create .env for E2E tests
      run: |
        echo "DB_HOST=localhost" > .env
        echo "DB_PORT=5432" >> .env
        echo "DB_USER=postgres" >> .env
        echo "DB_PASSWORD=postgres" >> .env
        echo "DB_NAME=app_db" >> .env
        echo TEST_EMAIL_HOST=${{ secrets.TEST_EMAIL_HOST }} >> .env
        echo TEST_EMAIL_USER=${{ secrets.TEST_EMAIL_USER }} >> .env
        echo TEST_EMAIL_PASSWORD=${{ secrets.TEST_EMAIL_PASSWORD }} >> .env
        echo API_BASE_URL=http://localhost:3000 >> .env

    - name: Run E2E tests
      run: |
        npm run test:e2e

    - name: Stop infrastructure
      if: always()
      run: |
        docker compose -f ./deployments/docker-compose.test.yaml down

    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-test-reports
        path: |
          src/test/reports/
        retention-days: 7